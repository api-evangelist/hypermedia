[
	{
		"tool_id": "123wJlc116jjvqsV3SHE6DBcci52uyXGlFJ737MSvSINji6IU2O7VSH3OkR81wla3Ga1qeMOx4NgnORQV5szoF9116wg117117",
		"name": "Collection+JSON",
		"user": "",
		"details": "Collection+JSON is a JSON-based read/write hypermedia-type designed to support management and querying of simple collections.",
		"post_date": "2014-07-25 18:07:45",
		"url": "http://amundsen.com/media-types/collection/",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "https://github.com/collection-json",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/madmen_icon_400x400.jpg",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "c4onx1LH2ppOSeKy96j5VzmCvneCMQfy715s1bA06EvGebu9RbtQj9fxO2rBK196FqFfrKHEnXmGUcitlWJ4Gw117117",
		"name": "Fortune.js",
		"user": "",
		"details": "Hello nerds. Fortune is a framework for prototyping hypermedia APIs that implement the JSON API specification. It comes with a modular persistence layer, with adapters for NeDB (built-in), MongoDB, MySQL, Postgres, u0026amp; SQLite. See guide for how to use.",
		"post_date": "2013-12-23 21:29:27",
		"url": "http://fortunejs.com/",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/fortune-js-logo-2.png",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Hypermedia"
		]
	},
	{
		"tool_id": "MTtFiPBDgtoqzugDEJUBWdDz8uAbHg6MSAPBa4ryRygrrtP0a123MlurRAIV5LTg0soS0LR2y4WiZaVleoX6IWBg117117",
		"name": "HAL",
		"user": "",
		"details": "HAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API. Adopting HAL will make your API explorable, and its documentation easily discoverable from within the API itself. In short, it will make your API easier to work with and therefore more attractive to client developers. APIs that adopt HAL can be easily served and consumed using open source libraries available for most major programming languages. Its also simple enough that you can just deal with it as you would any other JSON.",
		"post_date": "2014-07-25 17:27:37",
		"url": "http://stateless.co/hal_specification.html",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/bw-github.jpg",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "CuQXl76116MJP0W123tnahLydMEOD62FSI8BekyUdh3XJjXgCdkkcK1IJVbvi1MRQzQEpUKf4uSp116XT1P3r123kUL88g117117",
		"name": "HAL Browser",
		"user": "",
		"details": "An API browser for the hal+json media type.u0026nbsp;HAL is a simple format that gives a consistent and easy way to hyperlink between resources in your API. Adopting HAL will make your API explorable, and its documentation easily disocverable from within the API itself.",
		"post_date": "2013-12-23 21:35:14",
		"url": "https://github.com/mikekelly/hal-browser",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/hal-info-model.png",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Hypermedia"
		]
	},
	{
		"tool_id": "vJW7zflD7MQBkvtcmtIHllMUeB4jqbYimuuIwJpnwVDDQLAS2vEOrVdMZcKvxJenjA1pjcWKalcC5116Y5NL6cQg117117",
		"name": "JSON-LD",
		"user": "",
		"details": "JSON-LD is a lightweight Linked Data format. It is easy for humans to read and write. It is based on the already successful JSON format and provides a way to help JSON data interoperate at Web-scale. JSON-LD is an ideal data format for programming environments, REST Web services, and unstructured databases such as CouchDB and MongoDB.",
		"post_date": "2014-12-19 10:57:24",
		"url": "http://json-ld.org/",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/json-ld.png",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Semantics",
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "x08yoEbIRUn0ZT3re0Pf9BOfAy123zN5gjNlEbkHudpgS2Nu5DLw6xrKAGT3DspWlsYHUUe12315N5ZmbUAUCmtk123A117117",
		"name": "JSON:API",
		"user": "",
		"details": "A standard for building APIs in JSON, extracted from the JSON transport implicitly defined by Ember Datas REST adapter.",
		"post_date": "2014-07-26 22:14:36",
		"url": "",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/jsonapi@1.3x.png",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Hypermedia"
		]
	},
	{
		"tool_id": "WAfIg8637yn8mZXAMqCYg25BvkMqbXzdClCqd1w116agA2M5N9Lu2OyhqjWzqvcfHB6aLwmq123rTrozY5p4RMI8TQ117117",
		"name": "Mason",
		"user": "",
		"details": "Mason is a JSON format for introducing hypermedia elements to classic JSON data representations. With Mason, you get hypermedia elements for linking and modifying data, features for communicating to client developers and standardized error handling. Mason is built on JSON, reads JSON, writes JSON and generally fits well into a JSON based eco-system.",
		"post_date": "2014-12-19 10:59:17",
		"url": "https://github.com/JornWildt/Mason",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/jorn-wildt.jpeg",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "OeiX4a2gxt2K12gimiOfETcpsTI03QSaCj9tfMzyDlb7436CzzlG3116TmoYu4dp9Md1WubwPAA123yMFmwBaPPd6g117117",
		"name": "RESTdesc",
		"user": "",
		"details": "Semantic descriptions for hypermedia APIs. RESTdesc allows you to capture the functionality of hypermedia APIs, so automated agents can use them. Despite their powerful capabilities, RESTdesc descriptions are easy to master. The description is not a goal in itself: you want your API to be used. See how RESTdesc opens up your API for discovery, based on its functional characteristics.",
		"post_date": "2015-07-31 00:00:13",
		"url": "http://restdesc.org/",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/tool/restdesc-logo.png",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "eYiK3pS7TRL6116EdvrvG116ZSrhfv2dzHvZGU5KUWHToVDrS123YqtY9hJVPenjiKln07eBxh1skz84da40qoqeRTfA117117",
		"name": "Siren",
		"user": "",
		"details": "Siren is a hypermedia specification for representing entities. As HTML is used for visually representing documents on a Web site, Siren is a specification for presenting entities via a Web API. Siren offers structures to communicate information about entities, actions for executing state transitions, and links for client navigation.",
		"post_date": "2014-12-19 10:54:55",
		"url": "",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/kevin-swiber.jpeg",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Media Type",
			"Hypermedia",
			"Design",
			"Definitions"
		]
	},
	{
		"tool_id": "9WomN7BhvN3LLo95116S105Rk116RDC7uyilxQXW4XAWuYxZbuo1160sqtP9afwrDgjKYmoLUwpyTj1B0116A84123NPoanA117117",
		"name": "UBER",
		"user": "",
		"details": "The Uber message format is a minimal read/write hypermedia type designed to support simple state transfers and ad-hoc hypermedia-based transitions. This document describes both the XML and JSON variants of the format and provides guidelines for supporting Uber messages over the HTTP protocol.",
		"post_date": "2014-07-25 18:05:16",
		"url": "https://rawgit.com/mamund/media-types/master/uber-hypermedia.html",
		"blog_url": "",
		"blog_rss_url": "",
		"twitter_url": "http://twitter.com/uberhypermedia ",
		"github_url": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/blog/madmen_icon_400x400.jpg",
		"forks": 0,
		"followers": 0,
		"watchers": 0,
		"tags": [
			"Hypermedia",
			"Design",
			"Definitions"
		]
	}
]